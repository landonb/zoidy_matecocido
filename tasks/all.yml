---

# *** Ensure dirs.

- name: Ensure the working directory exists
  ansible.builtin.file: path={{ zoidy_matecocido_working_dir }} state=directory

# *** Record start states.

- name: Record stock gsettings
  ansible.builtin.shell: "dbus-launch gsettings list-recursively | sort > {{ zoidy_matecocido_gsettings_begin }}"
  args:
    # Skip this task once the dump file exists.
    creates: "{{ zoidy_matecocido_gsettings_begin }}"

# FIXME/2018-12-15: Also dump gconftool-2 settings? Not that we change them.
#    gconftool-2 --dump / > cmd-gconftool-2.txt

- name: Record stock dconf
  ansible.builtin.shell: "dbus-launch dconf dump / > {{ zoidy_matecocido_dconf_begin }}"
  args:
    # Skip this task once the dump file exists.
    creates: "{{ zoidy_matecocido_dconf_begin }}"

# ======================================================================= #

# *** Make changes.

- name: Load tasks to Hide Desktop icons
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: background-hide_icons-go_black
    apply: { tags: always }
  tags: background-hide_icons-go_black

- name: Add Alt-q Alt-tab binding
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: alt-tab-alt-q-to-go-backward
    apply: { tags: always }
  tags: alt-tab-alt-q-to-go-backward

- name: Load tasks to eliminate MATE Alt-Tab slugishness
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: alt-tab-eliminate-delay
    apply: { tags: always }
  tags: alt-tab-eliminate-delay

# Hack font is used by: terminal-configure.
# (And preferred by Dubs Vim <https://github.com/landonb/dubs-vim>.)
- name: Load tasks to Install Font “Hack Nerd Font”
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: font-hack-nerd-font
    apply: { tags: always }
  tags: font-hack-nerd-font

- name: Load tasks to Customize MATE Key Bindings
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: keybinding-circus
    apply: { tags: always }
  tags: keybinding-circus, reset-keybindings

- name: Load tasks to Customize MATE Appearance
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: mate-appearance-configure
    apply: { tags: always }
  tags: mate-appearance-configure

- name: Load tasks to Customize MATE Menu
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: mate-main-menu-customize
    apply: { tags: always }
  tags: mate-main-menu-customize

- name: Load tasks to Customize MATE Marco Window-Keybindings (non-numpad bindings)
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: mate-marco-window-keybindings
    apply: { tags: always }
  tags: mate-marco-window-keybindings

- name: Load tasks to Customize MATE Marco Window-Keybindings (numpad complements)
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: mate-marco-window-keybindings-numpad
    apply: { tags: always }
  # ISOFF/2023-04-28: Run only on `... --tags mate-marco-window-keybindings-numpad`.
  # - Note we cannot use a 'never' tag, which won't support using the role tag,
  #   e.g., `ansible-playbook ... --tags zoidy_matecocido` would still run this
  #   task.
  #   - This depends on your site.yml, but author's (~/.zoidy/site.yml) specifies:
  #       roles:
  #       - role: zoidy_matecocido
  #         tags: zoidy_matecocido
  #     Thus `tags: mate-marco-window-keybindings-numpad, never` is useless
  #     here, because Ansible adds 'zoidy_matecocido' tag to all role tasks,
  #     and then all tasks match, regardles of 'never'.
  #   - Hence a kludgy `when` tests whether user really specified tag or not.
  tags: mate-marco-window-keybindings-numpad
  when: "'mate-marco-window-keybindings-numpad' in ansible_run_tags"

- name: Load tasks to Configure caja File Browser
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: mate-caja-preferences
    apply: { tags: always }
  tags: mate-caja-preferences

- name: Load tasks to Configure caja Media Handling
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: mate-media-handling
    apply: { tags: always }
  tags: mate-media-handling

# ***

- name: Determine if host is “Desktop” or “Laptop”
  # (lb): Response should be either "Desktop" or "Notebook", at least what I've seen.
  ansible.builtin.shell: dmidecode --string chassis-type
  become: yes
  register: chassis_type
  tags: power-management-prefs-laptop

# (lb): It does not hurt to configure these setting on a Desktop,
# but for completeness, we'll restrict this task to Laptop hosts.
- name: Load tasks to Fiddle About Laptop Power Settings
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: power-management-prefs-laptop
    apply: { tags: always }
  tags: power-management-prefs-laptop
  when: chassis_type.stdout == 'Notebook'

# ***

- name: Load tasks to Configure MATE Take Screenshot
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: screenshot-configure
    apply: { tags: always }
  tags: screenshot-configure

- name: Load tasks to Disable screensaver, and its lock
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: screensaver-tweak
    apply: { tags: always }
  tags: screensaver-tweak

# ***

- name: Load tasks to ensure Ansible dconf module available
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: ansible-ensure-dconf
    apply: { tags: always }
  # This task requires -K privileges, otherwise we could add
  # terminal-configure tag match to avoid failing on user if
  # `dconf` unavailable when --tags terminal-configure used.
  tags: ansible-ensure-dconf

- name: Load tasks to Configure mate-terminal
  ansible.builtin.include_role:
    name: zoidy_matecocido
    tasks_from: terminal-configure
    apply: { tags: always }
  tags: terminal-configure

# ======================================================================= #

# *** Record final states.

- name: Record final gsettings
  ansible.builtin.shell: "dbus-launch gsettings list-recursively | sort > {{ zoidy_matecocido_gesttings_dated }}"

- name: Record final dconf
  ansible.builtin.shell: "dbus-launch dconf dump / > {{ zoidy_matecocido_dconf_dated }}"

