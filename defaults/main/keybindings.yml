---

# YOU: Set zoidy_matecocido_keybindings_bonus in your playbook's group_vars/.
zoidy_matecocido_keybindings_bonus: []

zoidy_matecocido_keybindings_basic:

  # *** Keybindings defined below:
  #
  #   Super_L + a   Focus window and tab: Gmail Inbox
  #
  #   Super_L + t   New Chromium Browser tab
  #
  #   Super_L + y   New Chrome Browser tab
  #
  #   Super_L + f   Open File Manager (caja)
  #
  #   Super_L + g   Float Topmost Window
  #
  #   Super_L + i   Invert Screen Colors
  #
  #   Super_L + `      Bring gVim [fs] to front
  #   Super_L + [TAB]  Bring gVim [fs] to front
  #
  #   Super_L + p   Open or BTF browser tab: PowerThesaurus
  #
  #   Super_L + x   Open or BTF browser tab: Regex Dictionary
  #
  #   Super_L + m   Run tmux in mate-terminal window.
  #
  #   Super_L + 1   Bring "Spotify" window to front [think !, like music]
  #
  #   Super_L + s   Bring "Messenger" window to front (Does not open new tab)

  # *** Focus Email window/tab: Super_L + a

  - name: "'[Personal] Gmail'"
    binding: "'<Mod4>a'"
    # Simple action when Gmail always active tab in its window:
    #   action: "'wmctrl -a \\\" - Gmail - \\\"'"
    # Using static landing tab, and also sleep because timing issue:
    action: "'{{ ansible_env.HOME }}/.local/bin/bash -c \\\"wmctrl -a \\\' - Gmail - \\\' || ( wmctrl -a \\\'Email & Calendar - \\\' && sleep 0.13 && xdotool key \\\'ctrl+Tab\\\' )\\\"'"

  # *** New Chromium window: Super_L + t

  - name: "'Chromium Browser'"
    binding: "'<Mod4>t'"
    action: "'/usr/bin/chromium-browser'"

  # *** New Chrome window: Super_L + y

  - name: "'Chrome Browser'"
    binding: "'<Mod4>y'"
    action: "'/opt/google/chrome/chrome'"

  # *** New caja (file system) window: Super_L + f

  - name: "'File Manager'"
    binding: "'<Mod4>f'"
    action: "'caja {{ ansible_env.HOME }}/Downloads'"

  # *** Float topmost window: Super_L + g

  - name: "'Float Topmost Window'"
    binding: "'<Mod4>g'"
    action: "'wmctrl -r :ACTIVE: -e 0,395,115,1050,750'"

  # *** Invert Screen Colors (ew!): Super_L + g

  - name: "'Invert Screen Colors'"
    binding: "'<Mod4>i'"
    action: "'/bin/bash -c \\\"{{ ansible_env.HOME }}/.local/bin/xrandr-invert-colors.bin\\\"'"

  # *** Focum gVim window: Super_L + `

  # Bring gVim to the foreground (based on Home Fries' `fs` alias,
  # when uses the SAMPI --servername convention).
  # [lb]: Using Super_L+Tab, so just one Levenshtein unit from Alt+Tab.
  #  - name: "'gVim [fs]'"
  #    binding: "'<Mod4>Escape'"
  #    action: "'xdotool search --name SAMPI windowactivate'"
  - name: "'gVim [fs]'"
    binding: "'<Mod4>grave'"
    action: "'xdotool search --name SAMPI windowactivate'"
  #
  # *** Focum gVim window: Super_L + TAB
  #
  - name: "'gVim [fs]'"
    binding: "'<Mod4>Tab'"
    action: "'xdotool search --name SAMPI windowactivate'"

  # [lb]: Use --new-window for the obvious reason of not changing any
  # existing browser windows you've got open (and, say, changing the
  # active tab, to your annoyance), but also so the browser is brought
  # to the front (so you don't have to alt-tab or otherwise find it
  # yourself, which happens if we call `sensible-browser` without the
  # option).

  # *** Focus or Open PowerThesaurus browser tab: Super_L + p

  - name: "'PowerThesaurus [tab]'"
    binding: "'<Mod4>p'"
    action: "'{{ ansible_env.HOME }}/.local/bin/bash -c \\\"wmctrl -a \\\'Power Thesaurus - \\\' || sensible-browser --new-window \\\'https://www.powerthesaurus.org/\\\'\\\"'"

  # *** Focus or Open RegexDictionary browser tab: Super_L + x

  - name: "'Regex Dictionary [tab]'"
    binding: "'<Mod4>x'"
    action: "'{{ ansible_env.HOME }}/.local/bin/bash -c \\\"wmctrl -a \\\'Regex Dictionary by Lou Hevly - \\\' || sensible-browser --new-window \\\'https://www.visca.com/regexdict/\\\'\\\"'"

  # *** Open new tmux mate-terminal: Super_L + m

  - name: "'tmux Window'"
    # BOO: I tried "'<Mod4>/'" "'<Mod4>\\/'" "'<Mod4>.'" but nothing!
    binding: "'<Mod4>m'"
    # - See the app-tmux.yml task, which builds and installs tmux to ~/.local/bin.
    # - See also ~/.profile, which updates PATH to include ~/.local/bin, so we can
    #   simply call `tmux` here, and not have to specify the full path.
    # - (lb): Unforunately, after ~/.profile updates LD_LIBRARY_PATH, something
    #   else resets it, so we have to include the path here (to user-local
    #   libevent and ncurses libraries).
    action: "'mate-terminal --geometry=130x48+402+8 -e \\\"bash -c \\\'LD_LIBRARY_PATH={{ ansible_env.HOME }}/.local/lib tmux\\\'\\\"'"

  # *** Focus Spotify application window: Super_L + s

  - name: "'Kick Out The Jams [Spotify]'"
    # Brings the Spotify application window to the front.
    binding: "'<Mod4>1'"
    # Argh: (lb): I give up, deferring to script, trying to delimit quotes
    # and dollar signs in dconf entries is frustrating, just shell out!
    action: "'{{ ansible_env.HOME }}/.homefries/bin/keybinding-focus-spotify'"

  # *** Focus Facebook Messenger browser tab: Super_L + d

  - name: "'[Facebook] Messenger'"
    # Brings the Facebook Messenger browser tab to the front.
    binding: "'<Mod4>s'"
    action: "'{{ ansible_env.HOME }}/.local/bin/bash -c \\\"wmctrl -a \\\'Messenger - \\\' || ( wmctrl -a \\\'Chat & Social - \\\' && sleep 0.13 && xdotool key \\\'ctrl+Tab\\\' )\\\"'"
    # (lb): If you always had a Messenger tab active in some window somewhere,
    # this would be a simple action:
    #
    #   action: "'wmctrl -a \\\"Messenger - \\\"'"
    #
    # However, Facebook "blinks" the window title on new message, which can
    # be very distracting if you're not checking messages immediately when
    # they're received. (Moreover, I think it's rather rude and intrusive.
    # I realize the behavior ensures that you know you have unread messages,
    # but why couldn't it be more like Gmail and just indicate the number of
    # new messages in parentheses in the window title?)
    #
    # Because of this, and so that I can leave my Messenger window open and
    # in its spot in the mate-panel window list, I like to check messages,
    # but then I'll park the browser window on a static tab. The static tab
    # is simply a blank page I've got saved on my filesystem, which is titled,
    # 'Chat & Social' (a hint to what tabs I have loaded in that browser window,
    # which is especially useful because mate-panels has been crashing of late,
    # and I sometimes find myself manually dragging windows icons back to their
    # proper window list positions, so having labeled windows helps).
    #
    # In short, I can check messages at my leisure, and I'm not annoyed by a
    # blinking window title as soon as I receive a new message. But now there's
    # extra work to bring Messenger to the front -- we might have to bring the
    # static page to the front and then switch tabs.
    #
    # 2020-01-04: There's a timing issue running this from a keybinding!
    # This snippet works fine from the command line,
    #   but not as a MATE keybinding.
    # If we call the implicit send-key command immediately:
    #     xdotool key 'ctrl+Tab'
    #   the key send has no effect.
    # If we get the window ID and try using that, still nothing:
    #     local window_id=$(xdotool search --name 'Chat & Social' | head -n 1)
    #     # local winid_hex=$(printf "0x%x" ${window_id})
    #     # Ensure exists:
    #     #   xwininfo -id $WINID_HEX | grep 'Chat & Social'
    #     xdotool key --window ${window_id} 'ctrl+Tab'
    #     # Chat & Social tab focused, but ctrl+Tab not received!
    # Fortunately, like all things uncontrollable, just wait for
    #   things to simmer down, then attack.
    # Note that I tried `sleep 0.05` but that didn't work.
    #   Using 0.1 seems to always work (so far, at least).
    #   Or maybe 0.13, I think I had one 0.1 slip through.

